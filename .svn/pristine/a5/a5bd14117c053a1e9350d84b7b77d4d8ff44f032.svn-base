/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.super_bits.modulosSB.webPaginas.JSFBeans.util;

import com.super_bits.modulosSB.SBCore.ConfigGeral.SBCore;
import com.super_bits.modulosSB.SBCore.InfoCampos.ItensGenericos.basico.BeanTodosSelecionados;
import com.super_bits.modulosSB.SBCore.ManipulaArquivo.UtilSBCoreArquivos;
import com.super_bits.modulosSB.SBCore.Mensagens.ItfCentralMensagens;
import com.super_bits.modulosSB.webPaginas.ConfigGeral.SBWebPaginas;
import com.super_bits.modulosSB.webPaginas.JSFBeans.SB.siteMap.anotacoes.beans.InfoMB_Acao;
import com.super_bits.modulosSB.webPaginas.util.UtilSBWP_JSFTools;
import java.io.Serializable;
import java.util.Date;
import javax.enterprise.context.RequestScoped;
import javax.faces.event.AjaxBehaviorEvent;
import javax.inject.Inject;
import javax.inject.Named;

/**
 *
 * @author Salvio
 */
@RequestScoped
@Named
public class PgUtil implements Serializable {

    @Inject
    private Cores cores;
    @Inject
    private Tema tema;

    private BeanTodosSelecionados beanTodosSelecionados = new BeanTodosSelecionados();

    public void mensagemAlerta(String pMensagem) {
        SBCore.getCentralDeMensagens().enviaMensagemUsuario(pMensagem, ItfCentralMensagens.TP_MENSAGEM.ALERTA);
    }

    public void mensagemErro(String pMensagem) {
        SBCore.getCentralDeMensagens().enviaMensagemUsuario(pMensagem, ItfCentralMensagens.TP_MENSAGEM.ERRO);
    }

    public void mensagemInfo(String pMensagem) {
        SBCore.getCentralDeMensagens().enviaMensagemUsuario(pMensagem, ItfCentralMensagens.TP_MENSAGEM.AVISO);
    }

    public BeanTodosSelecionados getBeanTodosSelecionados() {
        return beanTodosSelecionados;
    }

    public void setBeanTodosSelecionados(BeanTodosSelecionados beanTodosSelecionados) {
        this.beanTodosSelecionados = beanTodosSelecionados;
    }

    public Tema getTema() {

        if (tema == null) {
            return new Tema();
        }
        return tema;
    }

    public Cores getCores() {
        if (cores == null) {
            cores = new Cores();
        }
        return cores;
    }

    public long getDataHoraLong() {

        return new Date().getTime();
    }

    @InfoMB_Acao(descricao = "Evento de ajax que recebe o atributo idAtualizacao  <p ajax event='onAlgumaCoisa') que atualiza uma parte da tela pelo ID")
    public static void eventAtualizaTelaPorID(AjaxBehaviorEvent event) {

        String id = (String) event.getComponent().getAttributes().get("idAtualizacao");
        System.out.println("Atualizando o id" + id);
        if (id == null) {
            UtilSBWP_JSFTools.mensagens().erroSistema("o atributo idAtualizacao não foi encontrado, é necessário criar o atributo no componente" + event.getComponent().toString());
        }

        UtilSBWP_JSFTools.atualizaPorId(id);

    }

    public void atualizaTelaPorID(String idAtualizacao) {

        String id = idAtualizacao;
        System.out.println("Atualizando o id" + id);
        if (id == null) {
            UtilSBWP_JSFTools.mensagens().erroSistema("o atributo idAtualizacao não foi encontrado, é necessário criar o atributo no componente" + idAtualizacao);
        }
        UtilSBWP_JSFTools.atualizaPorId(id);

    }

    public void mostraDialogoByWidgetVar(String idWidget) {

    }

    public void enviaMensagem(String pMensagem) {
        SBCore.getCentralDeMensagens().enviaMensagemUsuario(pMensagem, ItfCentralMensagens.TP_MENSAGEM.AVISO);
        atualizaTelaPorID("mensagemUsuario");
    }

    public String makeCaminhoCompletoID(String pId) {
        if (pId == null || pId.equals("")) {
            return null;
        }
        return UtilSBWP_JSFTools.getIDSCaminhoAbsoluto(pId);
    }

    public String getEnderecoPagina() {
        return SBWebPaginas.getURLBase();
    }

    public void copiarRessource() {
        if (UtilSBCoreArquivos.copiarArquivos(UtilSBWP_JSFTools.getCaminhoLocalRessource(), SBCore.getCaminhoDesenvolvimento() + "/src/main/webapp/resources")) {
            SBCore.getCentralDeMensagens().enviaMensagemUsuario("Arquivos da pasta Ressource copiados com sucesso", ItfCentralMensagens.TP_MENSAGEM.AVISO);
        } else {
            SBCore.getCentralDeMensagens().enviaMensagemUsuario("Aconteceu um erro ao copiar os resources", ItfCentralMensagens.TP_MENSAGEM.ERRO);
        }
    }

}
