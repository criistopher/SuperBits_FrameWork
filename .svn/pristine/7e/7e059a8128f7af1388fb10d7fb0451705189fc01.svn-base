package com.super_bits.modulosSB.Persistencia.registro.persistidos;

//import com.super_bits.modulosSB.webPaginas.ConfigGeral.CInfo;
//Simport com.super_bits.modulosSB.webPaginas.JSFBeans.util.OrganizadorDeArquivos;
import com.super_bits.modulosSB.Persistencia.Campo.CampoEsperado;
import com.super_bits.modulosSB.Persistencia.anotacoes.InfoCampo.TC;
import com.super_bits.modulosSB.Persistencia.dao.UtilSBPersistencia;
import com.super_bits.modulosSB.Persistencia.util.UtilSBPersistenciaArquivosDeEntidade;
import com.super_bits.modulosSB.SBCore.BeansInterface.basico.ItfBeanSimples;
import com.super_bits.modulosSB.SBCore.ConfigGeral.SBCore;
import com.super_bits.modulosSB.SBCore.Mensagens.ItfCentralMensagens;
import com.super_bits.modulosSB.SBCore.UtilGeral.UtilSBCoreStrings;
import java.lang.reflect.Field;
import java.util.List;
import javax.persistence.PrePersist;

@SuppressWarnings("serial")
public abstract class EntidadeSimples extends EntidadeGenerica implements
        ItfBeanSimples {

    public EntidadeSimples() {
        super();

        //	adcionaCampoEsperado(new CampoEsperado(TC.IMG_PEQUENA, CInfo.SITE_URL
        //			+CInfo.pastaImagens + "/SBPequeno.jpg"));
        adcionaCampoEsperado(new CampoEsperado(TC.NOME_CURTO));
        adcionaCampoEsperado(new CampoEsperado(TC.ID));

    }

    public String getImgPequena() {

        return UtilSBPersistenciaArquivosDeEntidade.getURLImagem(this, TC.IMG_PEQUENA);

    }

    public String getNomeCurto() {
        String nome = (String) GetValorByTipoCampoEsperado(TC.NOME_CURTO);
        String nomeCurto = "";
        nome = nome.replace("-", " ");
        nome = nome.replace(".", " ");
        for (String parte : nome.split(" ")) {
            if (nomeCurto.length() < 15) {
                if (nomeCurto.length() > 0) {
                    nomeCurto = nomeCurto + " " + parte;
                } else {
                    nomeCurto = nomeCurto + parte;
                }
            }
        }
        return nomeCurto;
    }

    public String getNomeCurtoURLAmigavel() {
        String nomeCurto = getNomeCurto();
        return UtilSBCoreStrings.makeStrUrlAmigavel(nomeCurto);
    }

    @Override
    public int getId() {
        return Integer.parseInt(GetValorByTipoCampoEsperado(TC.ID).toString());
    }

    public String getNomeUnico() {
        return this.getClass().getSimpleName() + getId();
    }

    public String getCampoSQLNomeCurto() {
        Field campo = getCampoByAnotacao(TC.NOME_CURTO);
        if (campo == null) {
            return "nome_curto_nao_encontrado_na_classe" + this.getClass().getName();
        }
        return campo.getName();

    }

    public void uploadFoto(Object event) {
        /**
         * String categoria = (String) event.getComponent().getAttributes()
         * .get("catImagem"); ArquivosDeEntidade.SalvaIMAGEM(this,
         * event.getFile(), categoria);
         */
    }

    @Override
    public String toString() {
        if (this == null) {
            return "nulo";
        }
        return getNomeCurto();
    }

    @Override
    public int hashCode() {
        if (this == null) {
            return "nulo".hashCode();
        }

        return getNomeCurto().hashCode();
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }

        if (obj.hashCode() == this.hashCode()) {
            return true;
        } else {
            return false;
        }
    }

    public List<ItfBeanSimples> listaOpcoes(ItfBeanSimples objeto) {
        return (List) UtilSBPersistencia.getListaTodos(objeto.getClass());

    }

}
